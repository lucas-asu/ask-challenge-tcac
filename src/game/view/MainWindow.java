/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game.view;

import game.bean.Answer;
import game.bean.Player;
import game.bean.Question;
import game.controller.PlayerController;
import game.controller.TeamController;
import java.awt.event.KeyEvent;
import java.rmi.RemoteException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Lucas
 */
public class MainWindow extends javax.swing.JFrame {

    private PlayerController controller;
    private String IP;
    private TeamController teamController;

    /**
     * Creates new form Principal
     */
    public MainWindow(String ip) {
        this.IP = ip;
        initComponents();

        controller = new PlayerController(IP, this);
        teamController = new TeamController(controller, this);
        controller.initPlayerInterface(teamController);
        InitPlayer inp = new InitPlayer(controller, this);
        inp.setVisible(true);
        inp.setLocationRelativeTo(null);

        jtChats.setEnabledAt(1, false);

        controller.start();
        teamController.start();
        jlTeam.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpGERAL = new javax.swing.JPanel();
        jpNAVBAR = new javax.swing.JPanel();
        jbNewTeam = new javax.swing.JButton();
        jbJoinTeam = new javax.swing.JButton();
        jbChallengeTeam = new javax.swing.JButton();
        jbLeaveTeam = new javax.swing.JButton();
        jbManQuestion = new javax.swing.JButton();
        jbNewQuestion = new javax.swing.JButton();
        jbManTeam = new javax.swing.JButton();
        jbExit = new javax.swing.JButton();
        jpANSWER = new javax.swing.JPanel();
        TELA = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tela = new javax.swing.JTextArea();
        jpOPTIONS = new javax.swing.JPanel();
        A = new javax.swing.JButton();
        B = new javax.swing.JButton();
        C = new javax.swing.JButton();
        D = new javax.swing.JButton();
        jpQUESTION = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        questions = new javax.swing.JList();
        jbSendQuestion = new javax.swing.JButton();
        jpCHAT = new javax.swing.JPanel();
        jtMessage = new javax.swing.JTextField();
        jbSend = new javax.swing.JButton();
        jtChats = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtGlobal = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtTeam = new javax.swing.JTextArea();
        jpPERFIL = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jlNick = new javax.swing.JLabel();
        jlTeam = new javax.swing.JLabel();
        jlPoints = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jlMembers = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        notify = new javax.swing.JLabel();
        jbPlayOn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AskChallenge Game");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpGERAL.setBackground(new java.awt.Color(153, 153, 153));

        jpNAVBAR.setBackground(new java.awt.Color(153, 153, 153));
        jpNAVBAR.setLayout(new java.awt.GridLayout(4, 1));

        jbNewTeam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbNewTeam.setText("New Team");
        jbNewTeam.setToolTipText("");
        jbNewTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNewTeamActionPerformed(evt);
            }
        });
        jpNAVBAR.add(jbNewTeam);

        jbJoinTeam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbJoinTeam.setText("Join Team");
        jbJoinTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbJoinTeamActionPerformed(evt);
            }
        });
        jpNAVBAR.add(jbJoinTeam);

        jbChallengeTeam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbChallengeTeam.setText("Challenge");
        jbChallengeTeam.setEnabled(false);
        jbChallengeTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbChallengeTeamActionPerformed(evt);
            }
        });
        jpNAVBAR.add(jbChallengeTeam);

        jbLeaveTeam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbLeaveTeam.setText("Leave Team");
        jbLeaveTeam.setEnabled(false);
        jbLeaveTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLeaveTeamActionPerformed(evt);
            }
        });
        jpNAVBAR.add(jbLeaveTeam);

        jbManQuestion.setText("ManagerQuestion");
        jbManQuestion.setEnabled(false);
        jbManQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbManQuestionActionPerformed(evt);
            }
        });
        jpNAVBAR.add(jbManQuestion);

        jbNewQuestion.setText("New Question");
        jbNewQuestion.setEnabled(false);
        jbNewQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNewQuestionActionPerformed(evt);
            }
        });
        jpNAVBAR.add(jbNewQuestion);

        jbManTeam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbManTeam.setText("Manage Team");
        jbManTeam.setEnabled(false);
        jbManTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbManTeamActionPerformed(evt);
            }
        });
        jpNAVBAR.add(jbManTeam);

        jbExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbExit.setText("Exit");
        jbExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExitActionPerformed(evt);
            }
        });
        jpNAVBAR.add(jbExit);

        TELA.setBackground(new java.awt.Color(0, 0, 0));

        tela.setEditable(false);
        tela.setBackground(new java.awt.Color(0, 0, 51));
        tela.setColumns(20);
        tela.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tela.setForeground(new java.awt.Color(255, 255, 255));
        tela.setLineWrap(true);
        tela.setRows(5);
        tela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tela.setEnabled(false);
        jScrollPane3.setViewportView(tela);

        javax.swing.GroupLayout TELALayout = new javax.swing.GroupLayout(TELA);
        TELA.setLayout(TELALayout);
        TELALayout.setHorizontalGroup(
            TELALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TELALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        TELALayout.setVerticalGroup(
            TELALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TELALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jpANSWERLayout = new javax.swing.GroupLayout(jpANSWER);
        jpANSWER.setLayout(jpANSWERLayout);
        jpANSWERLayout.setHorizontalGroup(
            jpANSWERLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpANSWERLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TELA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpANSWERLayout.setVerticalGroup(
            jpANSWERLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpANSWERLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TELA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpOPTIONS.setBackground(new java.awt.Color(153, 153, 153));
        jpOPTIONS.setLayout(new java.awt.GridLayout(4, 1));

        A.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        A.setText("A)");
        A.setEnabled(false);
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });
        jpOPTIONS.add(A);

        B.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        B.setText("B)");
        B.setEnabled(false);
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });
        jpOPTIONS.add(B);

        C.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        C.setText("C)");
        C.setEnabled(false);
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });
        jpOPTIONS.add(C);

        D.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        D.setText("D)");
        D.setEnabled(false);
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });
        jpOPTIONS.add(D);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Question Selector");

        questions.setEnabled(false);
        jScrollPane5.setViewportView(questions);

        jbSendQuestion.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jbSendQuestion.setText("Send Question");
        jbSendQuestion.setEnabled(false);
        jbSendQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSendQuestionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpQUESTIONLayout = new javax.swing.GroupLayout(jpQUESTION);
        jpQUESTION.setLayout(jpQUESTIONLayout);
        jpQUESTIONLayout.setHorizontalGroup(
            jpQUESTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpQUESTIONLayout.createSequentialGroup()
                .addGroup(jpQUESTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jpQUESTIONLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpQUESTIONLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSendQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jpQUESTIONLayout.setVerticalGroup(
            jpQUESTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpQUESTIONLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGroup(jpQUESTIONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpQUESTIONLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jbSendQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpQUESTIONLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtMessage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtMessageKeyPressed(evt);
            }
        });

        jbSend.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSend.setText("send");
        jbSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSendActionPerformed(evt);
            }
        });

        jtGlobal.setEditable(false);
        jtGlobal.setColumns(20);
        jtGlobal.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jtGlobal.setRows(5);
        jScrollPane1.setViewportView(jtGlobal);

        jtChats.addTab("Global Chat", jScrollPane1);

        jtTeam.setColumns(20);
        jtTeam.setRows(5);
        jScrollPane4.setViewportView(jtTeam);

        jtChats.addTab("Team Chat", jScrollPane4);

        javax.swing.GroupLayout jpCHATLayout = new javax.swing.GroupLayout(jpCHAT);
        jpCHAT.setLayout(jpCHATLayout);
        jpCHATLayout.setHorizontalGroup(
            jpCHATLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCHATLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCHATLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtChats)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpCHATLayout.createSequentialGroup()
                        .addComponent(jtMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbSend)))
                .addContainerGap())
        );
        jpCHATLayout.setVerticalGroup(
            jpCHATLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCHATLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtChats)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpCHATLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSend))
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Team:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Nickname:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Points:");

        jlNick.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlNick.setText("null");

        jlTeam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlTeam.setText("null");

        jlPoints.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlPoints.setText("00");

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("UTFPR Labs");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Members:");

        jlMembers.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlMembers.setText("00");

        javax.swing.GroupLayout jpPERFILLayout = new javax.swing.GroupLayout(jpPERFIL);
        jpPERFIL.setLayout(jpPERFILLayout);
        jpPERFILLayout.setHorizontalGroup(
            jpPERFILLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPERFILLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPERFILLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpPERFILLayout.createSequentialGroup()
                        .addGroup(jpPERFILLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPERFILLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlNick))
                            .addGroup(jpPERFILLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlTeam))
                            .addGroup(jpPERFILLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlPoints))
                            .addGroup(jpPERFILLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlMembers)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpPERFILLayout.setVerticalGroup(
            jpPERFILLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPERFILLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jpPERFILLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jlNick))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPERFILLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jlTeam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPERFILLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jlPoints))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPERFILLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jlMembers))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));

        notify.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        notify.setForeground(new java.awt.Color(255, 255, 255));
        notify.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notify.setText("WELCOME TO ASK CHALLENGE GAME o/");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(notify, javax.swing.GroupLayout.PREFERRED_SIZE, 969, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(629, 629, 629))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(notify, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbPlayOn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbPlayOn.setText("Online Players");
        jbPlayOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPlayOnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpGERALLayout = new javax.swing.GroupLayout(jpGERAL);
        jpGERAL.setLayout(jpGERALLayout);
        jpGERALLayout.setHorizontalGroup(
            jpGERALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpGERALLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpGERALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1005, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpGERALLayout.createSequentialGroup()
                        .addComponent(jpNAVBAR, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpGERALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jpANSWER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jpQUESTION, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpGERALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpGERALLayout.createSequentialGroup()
                                .addComponent(jpOPTIONS, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jpPERFIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jpCHAT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbPlayOn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpGERALLayout.setVerticalGroup(
            jpGERALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpGERALLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpGERALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpGERALLayout.createSequentialGroup()
                        .addGroup(jpGERALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpOPTIONS, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpPERFIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpANSWER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpGERALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpQUESTION, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jpGERALLayout.createSequentialGroup()
                                .addComponent(jpCHAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbPlayOn))))
                    .addComponent(jpNAVBAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpGERAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpGERAL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNewTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNewTeamActionPerformed
        NewTeam nt = new NewTeam(teamController, this);
        nt.setLocationRelativeTo(this);
        nt.setVisible(true);
    }//GEN-LAST:event_jbNewTeamActionPerformed

    private void jbJoinTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbJoinTeamActionPerformed
        //prepare the list of teams
        if (teamController.getAllTeams().size() > 0) {
            JoinTeam jt = new JoinTeam(teamController, this);
            jt.setLocationRelativeTo(this);
            jt.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Don't have any team yet!");
        }
    }//GEN-LAST:event_jbJoinTeamActionPerformed

    private void jbLeaveTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLeaveTeamActionPerformed
        if (teamController.couldILeave()) {
            teamController.leaveTeam();
            leaveTeam();
        } else {
            JOptionPane.showMessageDialog(this, "You can't leave your team, first transfer your leadership to another member.");
        }
    }//GEN-LAST:event_jbLeaveTeamActionPerformed

    private void jbSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSendActionPerformed
        if (jtChats.getSelectedIndex() == 0) {
            System.out.println("Global");
            String msg = "$" + controller.player.getName() + ">>" + jtMessage.getText();
            controller.sendMessageGlobal(msg);
        } else if (jtChats.getSelectedIndex() == 1 && teamController.team != null) {
            System.out.println("Team");
            String msg = "$" + controller.player.getName() + ">>" + jtMessage.getText();
            controller.sendMessageTeam(msg, teamController.team);
        }
        jtMessage.setText("");
    }//GEN-LAST:event_jbSendActionPerformed

    private void jbChallengeTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbChallengeTeamActionPerformed
        if (teamController.couldIChallenge()) {
            CreateChallenge createChallenge = new CreateChallenge(controller, teamController, this);
            createChallenge.setLocationRelativeTo(this);
            createChallenge.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Your team must have some question prepared!");
        }
    }//GEN-LAST:event_jbChallengeTeamActionPerformed

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        Answer ans = new Answer(teamController.team.getID(), 'A');
        teamController.sendAnswer(ans);
    }//GEN-LAST:event_AActionPerformed

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        Answer ans = new Answer(teamController.team.getID(), 'B');
        teamController.sendAnswer(ans);
    }//GEN-LAST:event_BActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        Answer ans = new Answer(teamController.team.getID(), 'C');
        teamController.sendAnswer(ans);
    }//GEN-LAST:event_CActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        Answer ans = new Answer(teamController.team.getID(), 'D');
        teamController.sendAnswer(ans);
    }//GEN-LAST:event_DActionPerformed

    private void jbExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExitActionPerformed
        controller.closing(teamController.team);
        System.exit(0);
    }//GEN-LAST:event_jbExitActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controller.closing(teamController.team);
    }//GEN-LAST:event_formWindowClosing

    private void jtMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtMessageKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jtChats.getSelectedIndex() == 0) {
                System.out.println("Global");
                String msg = "$" + controller.player.getName() + ">>" + jtMessage.getText();
                controller.sendMessageGlobal(msg);
            } else if (jtChats.getSelectedIndex() == 1 && teamController.team != null) {
                System.out.println("Team");
                String msg = "$" + controller.player.getName() + ">>" + jtMessage.getText();
                controller.sendMessageTeam(msg, teamController.team);
            }
            jtMessage.setText("");
        }
    }//GEN-LAST:event_jtMessageKeyPressed

    private void jbManQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbManQuestionActionPerformed
        QuestionsManager qm = new QuestionsManager(controller, teamController);
        qm.setLocationRelativeTo(this);
        qm.setVisible(true);
    }//GEN-LAST:event_jbManQuestionActionPerformed

    private void jbNewQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNewQuestionActionPerformed
        NewQuestion nq = new NewQuestion(controller, teamController, this);
        nq.setLocationRelativeTo(this);
        nq.setVisible(true);
    }//GEN-LAST:event_jbNewQuestionActionPerformed

    private void jbManTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbManTeamActionPerformed
        if (teamController.team.getMembers().size() > 1) {
            TeamManager tm = new TeamManager(controller, teamController, this);
            tm.setLocationRelativeTo(this);
            tm.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "You are forever alone!");
        }
    }//GEN-LAST:event_jbManTeamActionPerformed

    private void jbSendQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSendQuestionActionPerformed
        Question qt = (Question) questions.getSelectedValue();
        if (qt != null) {
            teamController.sendQuestion(qt);
        }
    }//GEN-LAST:event_jbSendQuestionActionPerformed

    private void jbPlayOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPlayOnActionPerformed
        OnlinePlayers op = new OnlinePlayers(controller, this);
        op.setLocationRelativeTo(this);
        op.setVisible(true);
    }//GEN-LAST:event_jbPlayOnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A;
    private javax.swing.JButton B;
    private javax.swing.JButton C;
    private javax.swing.JButton D;
    private javax.swing.JPanel TELA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton jbChallengeTeam;
    private javax.swing.JButton jbExit;
    private javax.swing.JButton jbJoinTeam;
    private javax.swing.JButton jbLeaveTeam;
    private javax.swing.JButton jbManQuestion;
    private javax.swing.JButton jbManTeam;
    private javax.swing.JButton jbNewQuestion;
    private javax.swing.JButton jbNewTeam;
    private javax.swing.JButton jbPlayOn;
    private javax.swing.JButton jbSend;
    private javax.swing.JButton jbSendQuestion;
    private javax.swing.JLabel jlMembers;
    private javax.swing.JLabel jlNick;
    private javax.swing.JLabel jlPoints;
    private javax.swing.JLabel jlTeam;
    private javax.swing.JPanel jpANSWER;
    private javax.swing.JPanel jpCHAT;
    private javax.swing.JPanel jpGERAL;
    private javax.swing.JPanel jpNAVBAR;
    private javax.swing.JPanel jpOPTIONS;
    private javax.swing.JPanel jpPERFIL;
    private javax.swing.JPanel jpQUESTION;
    private javax.swing.JTabbedPane jtChats;
    private javax.swing.JTextArea jtGlobal;
    private javax.swing.JTextField jtMessage;
    private javax.swing.JTextArea jtTeam;
    private javax.swing.JLabel notify;
    private javax.swing.JList questions;
    private javax.swing.JTextArea tela;
    // End of variables declaration//GEN-END:variables

    public void leaveLeadership() {
        jbManQuestion.setEnabled(false);
        jbManTeam.setEnabled(false);
    }

    public void beLeader() {
        jbManQuestion.setEnabled(true);
        jbManTeam.setEnabled(true);
    }

    public void setTeam() {

        jlTeam.setText(teamController.team.getName());
        jlPoints.setText("" + teamController.team.getPoints());
        jlMembers.setText("" + teamController.team.getMembers().size());
        jtChats.setEnabledAt(1, true);
        jbJoinTeam.setEnabled(false);
        jbNewTeam.setEnabled(false);
        jbLeaveTeam.setEnabled(true);
        jbChallengeTeam.setEnabled(true);
        jbNewQuestion.setEnabled(true);

        if (controller.player.getID().equalsIgnoreCase(teamController.team.getLeader().getID())) {
            jbManQuestion.setEnabled(true);
            jbManTeam.setEnabled(true);
        }

    }

    public void updateTeam() {
        jlPoints.setText("" + teamController.team.getPoints());
        jlMembers.setText("" + teamController.team.getMembers().size());
    }

    public void leaveTeam() {
        jlTeam.setText("");
        jtChats.setEnabledAt(1, false);
        jbJoinTeam.setEnabled(true);
        jbNewTeam.setEnabled(true);
        jbLeaveTeam.setEnabled(false);
        jbChallengeTeam.setEnabled(false);
        jbNewQuestion.setEnabled(false);
        jbManQuestion.setEnabled(false);
        jbManTeam.setEnabled(false);
        jlPoints.setText("");
        jlMembers.setText("");
    }

    public void setMessageAll(String msg) {
        jtGlobal.setText(jtGlobal.getText() + msg + "\n");
    }

    public void setMessageTeam(String msg) {
        jtTeam.setText(jtTeam.getText() + msg + "\n");
    }

    public void showNotification(String msg) {
        notify.setText(msg);
    }

    public void showQuestion(Question qt, Player p) {
        String msg = qt.getDescription()
                + "\nA) " + qt.getAlternatives().get('A')
                + "\nB) " + qt.getAlternatives().get('B')
                + "\nC) " + qt.getAlternatives().get('C')
                + "\nD) " + qt.getAlternatives().get('D');
        tela.setText(msg);
        if (controller.player.getID().equalsIgnoreCase(p.getID())) {
            A.setEnabled(true);
            B.setEnabled(true);
            C.setEnabled(true);
            D.setEnabled(true);
        }
    }

    public void cleanAnswer() {
        tela.setText("");
        A.setEnabled(false);
        B.setEnabled(false);
        C.setEnabled(false);
        D.setEnabled(false);
    }

    public void cleanQuestion() {
        jbSendQuestion.setEnabled(false);
        questions.setEnabled(false);
    }

    public void updatePlayer(String nick) {
        jlNick.setText(nick);
    }

    public void updateSelectQuestions() {
        try {
            List<Question> qts = controller.factory.getQuestionInterface().getAll(teamController.team.getID());
            DefaultListModel model = new DefaultListModel();
            questions.setModel(model);
            for (Question q : qts) {
                model.addElement(q);
            }
            jbSendQuestion.setEnabled(true);
            questions.setEnabled(true);
        } catch (RemoteException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
